<html xmlns:t="http://twistedmatrix.com/ns/twisted.web.template/0.1">
<head>
	<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.js"></script>
	<script src="/bower_components/webcomponentsjs/webcomponentsjs.js"></script>
	<link rel="import" href="/bower_components/font-roboto/roboto.html" />

	<link rel="import" href="/components/octopus-editor/octopus-editor.html" />
	<link rel="import" href="/components/octopus-runtime/octopus-runtime.html" />
	<link rel="import" href="/bower_components/core-toolbar/core-toolbar.html" />
	<link rel="import" href="/bower_components/core-icon-button/core-icon-button.html" />
	<link rel="import" href="/bower_components/core-icons/av-icons.html" />
	<link rel="import" href="/bower_components/core-input/core-input.html" />

	<link rel="stylesheet" href="/components/octopus-editor/global.css" />
	<link rel="stylesheet" href="/resources/dropdown.css" />

	<style>

	html, body {
		margin: 0;
		padding: 0;
		display: flex;
		height: 100vh;
		flex-direction: column;
	}

	body {
		font-family: RobotoDraft, 'Helvetica Neue', Helvetica, Arial;
		color: #333;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
		-webkit-tap-highlight-color: rgba(0,0,0,0);
		-webkit-touch-callout: none;
	}
	
	#editor-container {
		flex: 1;
		display: flex;
		flex-direction: column;
		height: 100vh;
	}

	core-toolbar {
		background-color: #526E9C;
		color: #FFF;
		transition: background-color 0.2s linear 0.5s;
	}
	core-toolbar.experiment-running {
		background-color: #0D7C38;
	}
	core-toolbar.experiment-paused {
		background-color: #FFC200;
	}
	core-toolbar.experiment-error {
		background-color: #CB0909;
	}

	core-toolbar.experiment-running #btn-run,
	core-toolbar.experiment-paused #btn-run,
	core-toolbar #btn-pause,
	core-toolbar #btn-resume,
	core-toolbar #btn-stop {
		display: none;
	}
	core-toolbar.experiment-running #btn-pause,
	core-toolbar.experiment-paused #btn-resume,
	core-toolbar.experiment-running #btn-stop,
	core-toolbar.experiment-paused #btn-stop {
		display: block;
	}

	core-toolbar input {
		color: #fff;
		padding-bottom: 3px;
		font-size: 24px;
		margin-left: 15px;
	}

	</style>
	
  
</head>
<body unresolved="" t:render="editor_body">
<template id="application" is="auto-binding">
	<div id="editor-container">
		<core-toolbar class="experiment-{{experiment.state}}">
			<core-icon-button icon="av:play-circle-fill" id="btn-run" on-click="{{runClicked}}">Run</core-icon-button>
			<core-icon-button icon="av:pause-circle-fill" id="btn-pause" on-click="{{pauseClicked}}">Pause</core-icon-button>
			<core-icon-button icon="av:play-circle-fill" id="btn-resume" on-click="{{resumeClicked}}">Resume</core-icon-button>
			<core-icon-button icon="cancel" id="btn-stop" on-click="{{stopClicked}}">Stop</core-icon-button>
			<input is="core-input" id="experiment-title" value="title" />
		</core-toolbar>
		<octopus-editor id="editor" on-block-event="{{onEditorBlockEvent}}"></octopus-editor>
	</div>
	<div id="menu-container"></div>
	<octopus-runtime id="runtime" url="ws://127.0.0.1:9000" experiment="{{experiment}}" on-sketch-loaded="{{onSketchLoaded}}" on-block-state="{{onBlockState}}"><t:attr name="sketch"><t:slot name="sketch_id" /></t:attr></octopus-runtime>
</template>
<script>

var template = document.getElementById('application');
template.runClicked = function (e) {
    this.$.editor.clearBlockStates();
	this.$.runtime.experimentAction.call(this.$.runtime, "run");
};
template.pauseClicked = function (e) {
	this.$.runtime.experimentAction.call(this.$.runtime, "pause");
};
template.resumeClicked = function (e) {
	this.$.runtime.experimentAction.call(this.$.runtime, "resume");
};
template.stopClicked = function (e) {
	this.$.runtime.experimentAction.call(this.$.runtime, "stop");
};
template.onEditorBlockEvent = function (e) {
	this.$.runtime.blockEvent.call(this.$.runtime, e.detail);
};
template.onSketchLoaded = function (e) {
	this.$.editor.loadSketch.call(this.$.editor, e.detail);
};
template.onBlockState = function (e) {
	this.$.editor.setBlockState.call(this.$.editor, e.detail);
};

</script>
</body>
</html>
